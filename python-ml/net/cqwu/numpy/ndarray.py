# -*- coding: UTF-8 -*-
"""
NumPy - Ndarray 对象
NumPy 中定义的最重要的对象是称为 ndarray 的 N 维数组类型。 它描述相同类型的元素集合。 可以使用基于零的索引访问集合中的项目。
ndarray中的每个元素在内存中使用相同大小的块。 ndarray中的每个元素是数据类型对象的对象(称为 dtype)。
NumPy 支持比 Python 更多种类的数值类型:
1. 	bool_存储为一个字节的布尔值(真或假)
2. 	int_默认整数，相当于 C 的long，通常为int32或int64
3. 	intc相当于 C 的int，通常为int32或int64
4. 	intp用于索引的整数，相当于 C 的size_t，通常为int32或int64
5. 	int8字节(-128 ~ 127)
6. 	int1616 位整数(-32768 ~ 32767)
7. 	int3232 位整数(-2147483648 ~ 2147483647)
8. 	int6464 位整数(-9223372036854775808 ~ 9223372036854775807)
9. 	uint88 位无符号整数(0 ~ 255)
10. 	uint1616 位无符号整数(0 ~ 65535)
11. 	uint3232 位无符号整数(0 ~ 4294967295)
12. 	uint6464 位无符号整数(0 ~ 18446744073709551615)
13. 	float_float64的简写
14. 	float16半精度浮点：符号位，5 位指数，10 位尾数
15. 	float32单精度浮点：符号位，8 位指数，23 位尾数
16. 	float64双精度浮点：符号位，11 位指数，52 位尾数
17. 	complex_complex128的简写
18. 	complex64复数，由两个 32 位浮点表示(实部和虚部)
19. 	complex128复数，由两个 64 位浮点表示(实部和虚部) 




"""
import numpy as np
if __name__ == '__main__':
    #创建一个多维数组
    a = np.array([[1,2,3],[4,5,6]])
    print a.ndim

    #最小维度
    a = np.array([1,2,3,4,5,6],ndmin= 2,dtype = str)
    print a